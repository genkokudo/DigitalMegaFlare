@page
@model DigitalMegaFlare.Pages.ExcelWorldOnline.ExcelUploadModel
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "ExcelUpload";
    @*if (ViewData["Error"] != null)
    {
        <div role="alert" class="alert fade show alert-danger">@ViewData["Error"]</div>
    }*@
}

<style>
    th, td {
        /* 改行せずに表示する */
        white-space: nowrap;
    }
</style>

<h3>ExcelUpload</h3>
<p>とりあえず、.xlsxをアップロードして表示します。</p>

<!-- アップロード -->
<form id="form" method="post" enctype="multipart/form-data">
    <input type="file" name="file" accept=".xlsx" />
    <input type="text" name="comment" placeholder="コメント" />
    <input type="submit" asp-page-handler="Upload" value="送信" />

    <!-- 一覧 -->
    <table class="table">
        <thead>
            <tr>
                <th>元ファイル名</th>
                <th>日時(UTC)</th>
                <th>コメント</th>
                <th>ロック</th>
                <th>DL</th>
                <th>詳細</th>
                <th>削除</th>
                <th>生成</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.History.Histories)
            {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.RawFileName)</td>
                <td>@Html.DisplayFor(modelItem => item.InputDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Comment)</td>
                <td><input type="submit" asp-page-handler="Lock" asp-route-id="@item.Id" value="ロック" /></td>
                <td><input type="submit" asp-page-handler="Download" asp-route-id="@item.Id" value="DL" /></td>
                <td><input type="submit" asp-page-handler="Detail" asp-route-id="@item.Id" value="詳細" /></td>
                <td><input type="submit" asp-page-handler="Delete" asp-route-id="@item.Id" disabled="@item.IsLocked" value="削除" /></td>
                <td><input type="submit" asp-page-handler="Generate" asp-route-id="@item.Id" value="生成" /></td>
            </tr>
            }
        </tbody>
    </table>
</form>

<!-- Excelの内容を表示する -->
<!-- タブ部分 -->
<ul id="myTab" class="nav nav-tabs" role="tablist">
    @if (Model.Data != null)
    {
    for (int i = 0; i < Model.Data.SheetNames.Count; i++)
    {
        var active = i == 0 ? " active" : "";
        <li class="nav-item">
            <a href="#sheet@(i)" id="home-tab" class="nav-link@(active)" role="tab" data-toggle="tab">@(Model.Data.SheetNames[i])</a>
        </li>
    }

    }
</ul>

<!-- パネル部分 -->
<div id="myTabContent" class="tab-content mt-3">
    @if (Model.Data != null)
    {
    for (int i = 0; i < Model.Data.SheetNames.Count; i++)
    {
        var active = i == 0 ? " active" : "";
        <div id="sheet@(i)" class="tab-pane@(active)" role="tabpanel">
            <!-- 表 -->
            <div class="row mt-3 p-0">
                <table id="SheetTable@(i)" class="table table-striped table-bordered">
                    <thead>
                        <tr id="ExcelThead@(i)">
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    }
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var _excel = @Html.Raw(JsonConvert.SerializeObject(Model.Data.RawExcel));

        // Excel生データを表示する
        for (var i = 0; i < _excel.length; i++) {
            var _sheet = _excel[i];

            // ヘッダ項目
            $('#ExcelThead' + i).append('<th>行</th>');
            _sheet[0].forEach((value) => {
                $('#ExcelThead' + i).append('<th>' + value + '</th>');
            });

            // 本体
            for (var j = 1; j < _sheet.length; j++) {
                var tbodyTr = $('#SheetTable' + i).append('<tbody>').append('<td row="' + j + '">' + j + '</td>');
                for (var k = 0; k < _sheet[j].length; k++) {
                    var id = 'row="' + j + '" id="' + _sheet[0][k] + '_' + j + '"';
                    if (_sheet[j][k].length <= 30) {
                        tbodyTr.append('<td ' + id + '>' + _sheet[j][k] + '</td>');
                    } else {
                        tbodyTr.append('<td ' + id + ' style="font-weight:bolder; color:blue;">※30字を超えているため省略されました</td>');
                    }
                }
            }

        }

        // <button id="BtnA" class="btn btn-success btn-sm" key="1">Sample</button>
        $('input[value=削除]').on('click', function (e) {
            if (!window.confirm('本当にいいんですね？')) {
                // キャンセル時の処理
                e.preventDefault();
            }
        });

        // 上記の処理は重いので完全に終わった後に実行する
        $(function () {
        });

    </script>
}