using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
@{
	var Index = int.Parse(Model.Settings.Index); 
	var Mod = Model.RootList[Index];
}

namespace @(Model.Settings.Name).Entities
{
	/// <summary>
	/// @(Mod.Comment)です。
	/// </summary>
	public class @(Mod.Name)Entity
	{
		/// <summary>
		/// IDを取得、もしくは、設定します。
		/// </summary>
		[Key]
		public long @(Mod.Name)Id { get; set; }
		@foreach(var field in Mod.FieldList){
		@* フィールドのリスト *@
		var attribute = string.Empty;
		if(!string.IsNullOrWhiteSpace(field.Attribute)){
			attribute = $"\r\n\t\t{field.Attribute}";
		}
		@:
		@:/// <summary>
		@:/// @(field.Comment)を取得、もしくは、設定します。
		@:/// </summary>@(attribute)
		@:public @(field.Type) @(field.Name) { get; set; }
		}
		@if(Mod.IsMaster){
			// 初期値のリスト
			foreach(var field in Mod.FieldList){
				var initialValues = $"var {field.Name} = new[] { "
					foreach(var value in field.ValueList){
						initialValues += value.Value + ", ";
					}
				initialValues += "};";
			@: @(initialValues)
			}
		@:
		@:/// <summary>
		@:/// 初期値を作成します。
		@:/// </summary>
		@:/// <returns></returns>
		@:internal static @(Mod.Name)Entity[] GetInitialData()
		@:{
		@:	var reduceProbabilityCategories = new[] { 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5 };
		@:	var impactCategories = new[] { 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5 };
		@:	var riskCategories = new[] { 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5 };
		@:	var result = new List<@(Mod.Name)Entity>();
		@:	var order = 0;
		@:	for (int i = 0; i < reduceProbabilityCategories.Count(); i++)
		@:	{
		@:		order++;
		@:		result.Add(new @(Mod.Name)Entity()
		@:		{
		@:			Order = order,
		@:			ReduceProbabilityCategory = reduceProbabilityCategories[i],
		@:			ImpactCategory = impactCategories[i],
		@:			RiskCategory = riskCategories[i]
		@:		});
		@:	}
		@:	return result.ToArray();
		@:}
}	}
}
