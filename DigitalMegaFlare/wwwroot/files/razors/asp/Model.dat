using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace @(Model.Project.Name).Models
{
	/// <summary>
	/// @(Model.ModelList.Comment)
	/// </summary>
	public class @(Model.ModelList.Name)
	{
		/// <summary>
		/// 通し番号
		/// </summary>
		[Key]
		public long Id { get; set; }
		@foreach(var item in Model.ModelList.FieldList){
		@* フィールドのリスト *@
		var attribute = string.Empty;
		if(!string.IsNullOrWhiteSpace(item.Attribute)){
			attribute = $"\n\t\t{item.Attribute}";
		}
		@:
		@:/// <summary>
		@:/// @(item.Comment)
		@:/// </summary>@(attribute)
		@:public @(item.Type) @(item.Name) { get; set; }
		}
		@if(Model.ModelList.IsMaster){
		@:/// <summary>
		@:/// 初期値を作成します。
		@:/// </summary>
		@:public static @(Model.ModelList.Name) InitialData
		@:{
		@:	get
		@:	{
		@:		var names = new[] { "1", "2", "3", "4", "5" };
		@:		var result = new List<@(Model.ModelList.Name)>();
		@:		foreach (var name in names)
		@:		{
		@:			result.Add(new @(Model.ModelList.Name)() { Name = name });
		@:		}
		@:		return result.ToArray();
		@:	}
		@:}
		}
	}
}


★固定ゲッターのInitialDataについて
・IsMasterの場合のみ作成
・値リストから全て生成可能、要Pascal→Camel変換
・複数形の生成は無理なので、入力させる。




